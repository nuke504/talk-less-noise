# NGINX Configuration for a reverse proxy in Azure Container Apps

# Defines the number of worker processes that NGINX will use.
# Typically set to 'auto' to match the number of CPU cores.
worker_processes auto;

# Configuration for how NGINX handles connections.
events {
    # Determines the maximum number of simultaneous connections that can be opened by a worker process.
    # Set to a reasonably high number.
    worker_connections 1024;
    # Multi_accept allows a worker process to accept as many new connections as possible.
    multi_accept on;
}

# The main HTTP block where server and upstream configurations are defined.
http {
    # Includes the MIME types file, which maps file extensions to content types.
    include       /etc/nginx/mime.types;
    # Sets the default MIME type for files if the type cannot be determined.
    default_type  application/octet-stream;

    # Specifies the format of log entries. 'main' is a common combined log format.
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # Defines the access log file and format. '/dev/stdout' for container logs.
    access_log  /dev/stdout main;
    # Defines the error log file and level. '/dev/stderr' for container errors.
    error_log   /dev/stderr warn; # 'warn' level is often sufficient for production

    # Sends files directly from the disk using sendfile(2), which optimizes file transfer.
    sendfile        on;
    # Disables TCP Nagle algorithm for sendfile, improving response time for small packets.
    tcp_nopush      on;
    # Enables or disables the use of the TCP_CORK option for sendfile.
    tcp_cork        on;

    # Timeout for keep-alive connections with the client.
    # A higher value keeps connections open longer, reducing overhead for repeated requests.
    keepalive_timeout  65;

    # Specifies the maximum body size of a client request. Essential for file uploads.
    client_max_body_size 100M; # Example: 100 megabytes

    # Defines a server block to handle incoming requests.
    server {
        # NGINX in a container typically listens on port 80 for HTTP traffic.
        listen 80;
        # Specifies the server name (your container app's public URL). '_' is a wildcard.
        server_name _;

        # This single location block will proxy ALL incoming requests to the /docs path on the backend.
        # The BACKEND_API_URL environment variable will be substituted here at runtime.
        # For example, an external request to 'your-nginx-app.azurecontainerapps.io/any/path'
        # will be proxied to 'http://<YOUR_BACKEND_API_URL_VALUE>/docs'.
        location / {
            # Proxies the request to the backend, appending '/docs'.
            # The URL will be constructed from the BACKEND_API_URL environment variable.
            # Example: http://backend-api.internal.orangesky-fc92084d.southeastasia.azurecontainerapps.io:8080/docs
            proxy_pass http://${BACKEND_API_URL}/docs;

            # Passes the original Host header from the client to the backend.
            proxy_set_header Host $host;
            # Passes the real IP address of the client to the backend.
            proxy_set_header X-Real-IP $remote_addr;
            # Appends the client's IP to the X-Forwarded-For header, useful for chained proxies.
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # Passes the original protocol (HTTP or HTTPS) to the backend.
            proxy_set_header X-Forwarded-Proto $scheme;

            # --- Proxy Connection Timeouts ---
            # Timeout for establishing a connection with the upstream server.
            proxy_connect_timeout 75s;
            # Timeout for sending a request to the upstream server.
            proxy_send_timeout 75s;
            # Timeout for receiving a response from the upstream server.
            proxy_read_timeout 75s;

            # --- Proxy Buffering (Optional, for performance/large responses) ---
            # proxy_buffer_size 128k;
            # proxy_buffers 4 256k;
            # proxy_busy_buffers_size 256k;
            # proxy_buffering on;
        }

        # Optional: Add a health check endpoint for NGINX itself (not forwarding to backend)
        location /healthz {
            access_log off;
            add_header Content-Type text/plain;
            return 200 'NGINX is healthy\n';
        }
    }
}
